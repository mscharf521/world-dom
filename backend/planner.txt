Notes:
    has_sel_cap can be removed. Just check if user has any caps?
    GSI passed on connection_id could let you query a single user's data based on connection_id
    GSI vs ConnectionId PK? 
        GSI stores all user info where ConnectionId PK only stores room associated with connection_id
        But GSI does not need to store all user info
        COSTS?
    Is there a need to store messages?

RequestContext
    connectionId

Messages
    client-message
        payload: room_id, message
        result: send message + username + connection_id to all users in room
        data needed: 
            room exists?
            connection_id of all users

        get all users in room by looking at sk prefix in room id PK

    join-room
        payload: room_id, username
        result: 
            create room if it doesn't exist
            create user in db
            send all user data(username, connection_id) to all users in room
            send join-room result to sender
        data needed: 
            room exists
            room has started
            connection_id of all users
            username of all users

            get room data by looking at room id PK and metadata sk
            get all users in room by looking at sk prefix in room id PK

    host-start-game
        payload: room_id
        result: 
            set room to started
            send start-game to all users in room with num_caps
        data needed: 
            count of users in room
            num_caps of 
            
            get room data by looking at room id PK and metadata sk
            get all users in room by looking at sk prefix in room id PK

    cap-sel
        payload: room_id, caps
        result: 
            set user's caps
            send room-users to all users in room
            Check if all users have selected their caps
                if so, set turn_order and send next-turn to all users in room with current turn id
        data needed:
            room turn_order? but we just calculated it??
            connection_id of all users
            capitals of all users
        notes:
            could validate that the number of caps is correct
                would require num caps of room

        ??get room data by looking at room id PK and metadata sk
        get all users in room by looking at sk prefix in room id PK


    client-turn
        payload: room_id, bomb
        result:
            add bomb to room
            Check if any capitals were hit
                if so, 
                    update capital for users
                    check win condition
                        if win condition met, send win/tie/lose to all users in room
                    send next-turn to all users in room with current turn id
            update room bombs
            increment turn_order and send next-turn to all users
        data needed:
            room turn_order
            room bombs
            connection_id of all users
            capitals of all users

        get room data by looking at room id PK and metadata sk
        get all users in room by looking at sk prefix in room id PK

    leave-room/disconnect (disconnect no have room id? maybe need GSI)
        payload: room_id
        result:
            remove user data from db
            remove user from turn order
            if users in room, send room-users to all users in room
            if no users in room, destroy room
        data needed:
            connection_id of all users
            all data for all users?

        get room data by looking at room id PK and metadata sk
        get all users in room by looking at sk prefix in room id PK

Room
PK: ROOM#room_id
SK: METADATA
Num_caps: num_caps
Turn_order: turn_order[]
Bombs: bombs[]
Password: password
ttl: created_at + 1 day?


User (GSI project keys only)
PK: ROOM#room_id
SK: USER#connection_id
GSI1PK: CONN#connection_id
GSI1SK: room_id
Username: username
Caps: caps[]
ttl: created_at + 1 day?







